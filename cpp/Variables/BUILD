cc_binary (
  name = "001",
  srcs = ["001 - Data Types - snippet.cc"],
)

cc_binary (
  name = "002_-_Signed_vs._Unsigned_Numbers_-_snippet",
  srcs = ["002 - Signed vs. Unsigned Numbers - snippet.cc"],
)

cc_binary (
  name = "003_-_Different_Integer_Type_Sizes_-_snippet",
  srcs = ["003 - Different Integer Type Sizes - snippet.cc"],
)

cc_binary (
  name = "004_-_Different_Floating_Point_Type_Sizes_-_snippet",
  srcs = ["004 - Different Floating Point Type Sizes - snippet.cc"],
)

cc_binary (
  name = "005_-_Float_Equality_(approximate)_-_snippet",
  srcs = ["005 - Float Equality (approximate) - snippet.cc"],
)

cc_binary (
  name = "006_-_Constants,_Final_Variables_-_snippet",
  srcs = ["006 - Constants, Final Variables - snippet.cc"],
)

cc_binary (
  name = "007_-_Statics_-_snippet",
  srcs = ["007 - Statics - snippet.cc"],
)

cc_binary (
  name = "008_-_Enums_(inc._most_basic,_minimal,_numeric,_string,_and_strongly-typed)_-_snippet",
  srcs = ["008 - Enums (inc. most basic, minimal, numeric, string, and strongly-typed) - snippet.cc"],
)

cc_binary (
  name = "009_-_Nullability_-_snippet",
  srcs = ["009 - Nullability - snippet.cc"],
)

cc_binary (
  name = "010_-_NaN,_Infinity,_etc._-_snippet",
  srcs = ["010 - NaN, Infinity, etc. - snippet.cc"],
)

cc_binary (
  name = "011_-_References_and_Mutability_-_snippet",
  srcs = ["011 - References and Mutability - snippet.cc"],
)

cc_binary (
  name = "012_-_Type_Inference_-_snippet",
  srcs = ["012 - Type Inference - snippet.cc"],
)

cc_binary (
  name = "013_-_Equality_(all_ways)_-_snippet",
  srcs = ["013 - Equality (all ways) - snippet.cc"],
)

cc_binary (
  name = "014_-_Casting_&_Coercion_-_snippet",
  srcs = ["014 - Casting & Coercion - snippet.cc"],
)

cc_binary (
  name = "015_-_Type_Alias_-_snippet",
  srcs = ["015 - Type Alias - snippet.cc"],
)

cc_binary (
  name = "016_-_Type_Union_-_snippet",
  srcs = ["016 - Type Union - snippet.cc"],
)

cc_binary (
  name = "017_-_Variable_Lifetime_inc._Caveats_-_snippet",
  srcs = ["017 - Variable Lifetime inc. Caveats - snippet.cc"],
)

cc_binary (
  name = "018_-_Scope_and_Visibility_-_snippet",
  srcs = ["018 - Scope and Visibility - snippet.cc"],
)

cc_binary (
  name = "019_-_Local,_Instance,_and_Class_Variables_-_snippet",
  srcs = ["019 - Local, Instance, and Class Variables - snippet.cc"],
)

cc_binary (
  name = "020_-_Pointers,_References,_Smart_Pointers,_Memory_Management_-_snippet",
  srcs = ["020 - Pointers, References, Smart Pointers, Memory Management - snippet.cc"],
)

cc_binary (
  name = "021_-_Garbage_Collection,_Memory_Leaks_-_snippet",
  srcs = ["021 - Garbage Collection, Memory Leaks - snippet.cc"],
)

cc_binary (
  name = "022_-_Move,_Copy,_and_Clone_Semantics_-_snippet",
  srcs = ["022 - Move, Copy, and Clone Semantics - snippet.cc"],
)

cc_binary (
  name = "023_-_Uninitialized,_Default_Values_(inc._local,_global,_instance,_and_static_contexts)_-_snippet",
  srcs = ["023 - Uninitialized, Default Values (inc. local, global, instance, and static contexts) - snippet.cc"],
)

cc_binary (
  name = "024_-_Getting_Characteristics_Such_as_Max_and_Min_Value_of_Data_Type_-_snippet",
  srcs = ["024 - Getting Characteristics Such as Max and Min Value of Data Type - snippet.cc"],
)

cc_binary (
  name = "025_-_Delayed_Initialization_of_Locals_(constants_vs._variables)_-_snippet",
  srcs = ["025 - Delayed Initialization of Locals (constants vs. variables) - snippet.cc"],
)

cc_binary (
  name = "026_-_Delayed_Iniitialization_of_Instance_Members_(constants_vs._variables)_-_snippet",
  srcs = ["026 - Delayed Iniitialization of Instance Members (constants vs. variables) - snippet.cc"],
)

cc_binary (
  name = "027_-_Declaring_Multiple_Variables_in_One_Line_-_snippet",
  srcs = ["027 - Declaring Multiple Variables in One Line - snippet.cc"],
)

